trigger:
  branches:
    include:
      - cach

pool:
  vmImage: 'ubuntu-latest'

variables:
  imageName: 'mahmoudalsory/todoapp'
  cacheTag: 'buildcache'

steps:
- task: DockerInstaller@0
  inputs:
    dockerVersion: '20.10.7'

- script: |
    echo "$(DOCKERHUB_PASSWORD)" | docker login -u "$(DOCKERHUB_USERNAME)" --password-stdin
  displayName: 'Login to Docker Hub'

- script: |
    docker buildx create --use --name builder
    docker buildx inspect --bootstrap
  displayName: 'Setup Docker Buildx'

# ✅ NEW STEP — Pull the cache layer before building
- script: |
    echo "Attempting to pull the build cache from Docker Hub..."
    docker pull $(imageName):$(cacheTag) || echo "No cache found, building from scratch."
  displayName: 'Pull Previous Cache Layer from Docker Hub'

- script: |
    docker buildx build \
      --builder builder \
      --tag $(imageName):latest \
      --tag $(imageName):$(cacheTag) \
      --cache-from=type=registry,ref=$(imageName):$(cacheTag) \
      --cache-to=type=registry,ref=$(imageName):$(cacheTag),mode=max \
      --push \
      --build-arg BUILDKIT_INLINE_CACHE=1 \
      --file Dockerfile \
      --progress=plain \
      .
  displayName: 'Build & Push Image with Remote Cache'

# Optional: Run the container locally for testing
- script: |
    echo "Running container locally on agent for testing..."
    docker run -d -p 90:80 --name test-container $(imageName):latest

    echo "Waiting for the container to start..."
    sleep 5

    echo "Testing the application with curl:"
    curl -I http://localhost:90 || echo "App did not respond!"

    echo "Container logs:"
    docker logs test-container || true

    echo "Cleaning up..."
    docker stop test-container && docker rm test-container
  displayName: 'Temporary Deploy & Test Container on Agent'
