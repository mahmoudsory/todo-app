trigger:
  branches:
    include:
      - cach

pool:
  vmImage: 'ubuntu-latest'

variables:
  imageName: 'mahmoudalsory/todoapp'

steps:
# ----------------------------
# 1. Install Node.js
# ----------------------------
- task: NodeTool@0
  inputs:
    versionSpec: '14.x'
  displayName: 'Install Node.js'

# ----------------------------
# 2. Restore Yarn Cache
# ----------------------------
- task: Cache@2
  inputs:
    key: 'yarn | "$(Agent.OS)" | yarn.lock'
    path: node_modules
    restoreKeys: |
      yarn | "$(Agent.OS)"
  displayName: 'Restore Yarn Cache'

# ----------------------------
# 3. Install Dependencies
# ----------------------------
- script: |
    yarn install --frozen-lockfile --prefer-offline
  displayName: 'Install Dependencies'

# ----------------------------
# 4. Build the App
# ----------------------------
- script: yarn build
  displayName: 'Build App'

# ----------------------------
# 5. Docker Login
# ----------------------------
- script: |
    echo "$(DOCKERHUB_PASSWORD)" | docker login -u "$(DOCKERHUB_USERNAME)" --password-stdin
  displayName: 'Docker Login'

# ----------------------------
# 6. Build & Push Docker Image
# ----------------------------
- script: |
    docker build -t $(imageName):latest .
    docker push $(imageName):latest
  displayName: 'Build & Push Docker Image'

# ----------------------------
# 7. Test the Container Locally
# ----------------------------
- script: |
    echo "Running container locally on agent..."
    docker run -d -p 90:80 --name test-container $(imageName):latest

    echo "Waiting for app to start..."
    sleep 5

    echo "Testing with curl:"
    curl -I http://localhost:90 || echo "App did not respond!"

    echo "Logs from the container:"
    docker logs test-container || true

    echo "Cleaning up..."
    docker stop test-container && docker rm test-container
  displayName: 'Test Docker Container'
